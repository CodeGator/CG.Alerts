{
  "api/CG.Alerts.Alert.html": {
    "href": "api/CG.Alerts.Alert.html",
    "title": "Class Alert",
    "keywords": "Class Alert This class represents a singleton implementation of the IAlert interface. Inheritance System.Object CG.SingletonBase < Alert > Alert Implements IAlert Inherited Members CG.SingletonBase<CG.Alerts.Alert>.Instance() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public sealed class Alert : SingletonBase<Alert>, IAlert Remarks The idea with this class, is to create a simple service for handling alerts that won't require a full-blown dependency injection container to function - but that can be extended to work seamlessly with a DI container if needed. Properties Handler This property contains the default alert handler. Declaration public IAlertHandler Handler { get; } Property Value Type Description IAlertHandler Implements IAlert Extension Methods AlertExtensions.SetHandler<T>(Alert, T) AlertExtensions.TryRaise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) AlertExtensions.Raise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) AlertExtensions.RaiseInformation(IAlert, String, String, String, Int32) AlertExtensions.RaiseWarning(IAlert, String, String, String, Int32) AlertExtensions.RaiseWarning(IAlert, String, Exception, String, String, Int32) AlertExtensions.RaiseError(IAlert, String, String, String, Int32) AlertExtensions.RaiseError(IAlert, String, Exception, String, String, Int32) AlertExtensions.RaiseCritical(IAlert, String, String, String, Int32) AlertExtensions.RaiseCritical(IAlert, String, Exception, String, String, Int32) AlertExtensions.RaiseAudit(IAlert, String, String, String, Int32) AlertExtensions.RaiseDebug(IAlert, String, String, String, Int32) AlertExtensions.RaiseTrace(IAlert, String, String, String, Int32)"
  },
  "api/CG.Alerts.AlertExtensions.html": {
    "href": "api/CG.Alerts.AlertExtensions.html",
    "title": "Class AlertExtensions",
    "keywords": "Class AlertExtensions This class contains extension methods related to the IAlert type. Inheritance System.Object AlertExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public static class AlertExtensions Methods Raise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) This method attempts raises an alert and throws an exception if that operation failes for any reason. Declaration public static void Raise(this IAlert alert, AlertType alertType, IDictionary<string, object> args = null, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. AlertType alertType The type of alert to raise. System.Collections.Generic.IDictionary < System.String , System.Object > args The optional arguments for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Remarks There are convenience wrappers for the various flavors of alerts that are simpler to call than using this method directly: RaiseInformation(IAlert, String, String, String, Int32) RaiseWarning(IAlert, String, Exception, String, String, Int32) RaiseWarning(IAlert, String, String, String, Int32) RaiseError(IAlert, String, Exception, String, String, Int32) RaiseError(IAlert, String, String, String, Int32) RaiseCritical(IAlert, String, Exception, String, String, Int32) RaiseCritical(IAlert, String, String, String, Int32) RaiseAudit(IAlert, String, String, String, Int32) RaiseDebug(IAlert, String, String, String, Int32) RaiseTrace(IAlert, String, String, String, Int32) Examples This example demonstrates how to call the Raise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) method: void Test() { Alert.Instance().Raise( AlertType.Debug, new Dictionary{string, object}() { { nameof(message), \"something happened ...\" } } ); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the arguments are missing, or NULL. RaiseAudit(IAlert, String, String, String, Int32) This method raises an audit alert containing the specified message. Declaration public static IAlert RaiseAudit(this IAlert alert, string message, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseAudit(IAlert, String, String, String, Int32) method: void Test() { Alert.Instance().RaiseAudit(\"something happened ...\"); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseCritical(IAlert, String, Exception, String, String, Int32) This method raises a critical error alert containing the specified message and an exception. Declaration public static IAlert RaiseCritical(this IAlert alert, string message, Exception ex, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.Exception ex The exception for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseCritical(IAlert, String, Exception, String, String, Int32) method: void Test() { try { // Do something that tosses an exception ... } catch (Exception ex) { Alert.Instance().RaiseCritical(\"something happened ...\", ex); } } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseCritical(IAlert, String, String, String, Int32) This method raises a critical error alert containing the specified message. Declaration public static IAlert RaiseCritical(this IAlert alert, string message, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseCritical(IAlert, String, String, String, Int32) method: void Test() { Alert.Instance().RaiseCritical(\"something happened ...\"); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseDebug(IAlert, String, String, String, Int32) This method raises a debug alert containing the specified message. Declaration public static IAlert RaiseDebug(this IAlert alert, string message, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseDebug(IAlert, String, String, String, Int32) method: void Test() { Alert.Instance().RaiseDebug(\"something happened ...\"); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseError(IAlert, String, Exception, String, String, Int32) This method raises an error alert containing the specified message and an exception. Declaration public static IAlert RaiseError(this IAlert alert, string message, Exception ex, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.Exception ex The exception for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseError(IAlert, String, Exception, String, String, Int32) method: void Test() { try { // Do something that tosses an exception ... } catch (Exception ex) { Alert.Instance().RaiseError(\"something happened ...\", ex); } } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseError(IAlert, String, String, String, Int32) This method raises an error alert containing the specified message. Declaration public static IAlert RaiseError(this IAlert alert, string message, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseError(IAlert, String, String, String, Int32) method: void Test() { Alert.Instance().RaiseError(\"something happened ...\"); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseInformation(IAlert, String, String, String, Int32) This method raises an informational alert containing the specified message. Declaration public static IAlert RaiseInformation(this IAlert alert, string message, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseInformation(IAlert, String, String, String, Int32) method: void Test() { Alert.Instance().RaiseInformation(\"something happened ...\"); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseTrace(IAlert, String, String, String, Int32) This method raises a trace alert containing the specified message. Declaration public static IAlert RaiseTrace(this IAlert alert, string message, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseTrace(IAlert, String, String, String, Int32) method: void Test() { Alert.Instance().RaiseTrace(\"something happened ...\"); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseWarning(IAlert, String, Exception, String, String, Int32) This method raises a warning alert containing the specified message and an exception. Declaration public static IAlert RaiseWarning(this IAlert alert, string message, Exception ex, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.Exception ex The exception for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseWarning(IAlert, String, Exception, String, String, Int32) method: void Test() { try { // Do something that tosses an exception ... } catch (Exception ex) { Alert.Instance().RaiseWarning(\"something happened ...\", ex); } } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. RaiseWarning(IAlert, String, String, String, Int32) This method raises a warning alert containing the specified message. Declaration public static IAlert RaiseWarning(this IAlert alert, string message, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. System.String message The message for the operation. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description IAlert The value of the alert parameter, for chaining calls together. Examples This example demonstrates how to call the RaiseWarning(IAlert, String, String, String, Int32) method: void Test() { Alert.Instance().RaiseWarning(\"something happened ...\"); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever any of the arguments are missing, or NULL. SetHandler<T>(Alert, T) This method sets a handler for alerts processing. Declaration public static void SetHandler<T>(this Alert alert, T handler) where T : IAlertHandler Parameters Type Name Description Alert alert The alert to use for the operation. T handler The handler instance. Type Parameters Name Description T The type of handler to use for the operation. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the arguments are missing, or NULL. TryRaise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) This method attempts to raise an alert and returns false if that operation fails for any reason. Declaration public static bool TryRaise(this IAlert alert, AlertType alertType, IDictionary<string, object> args = null, string memberName = \"\", string sourceFilePath = \"\", int sourceLineNumber = 0) Parameters Type Name Description IAlert alert The alert to use for the operation. AlertType alertType The type of alert to raise. System.Collections.Generic.IDictionary < System.String , System.Object > args The optional arguments for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Returns Type Description System.Boolean True if the alert was raised; false otherwise. Remarks There are convenience wrappers for the various flavors of alerts that are simpler to call than using this method directly: RaiseInformation(IAlert, String, String, String, Int32) RaiseWarning(IAlert, String, Exception, String, String, Int32) RaiseWarning(IAlert, String, String, String, Int32) RaiseError(IAlert, String, Exception, String, String, Int32) RaiseError(IAlert, String, String, String, Int32) RaiseCritical(IAlert, String, Exception, String, String, Int32) RaiseCritical(IAlert, String, String, String, Int32) RaiseAudit(IAlert, String, String, String, Int32) RaiseDebug(IAlert, String, String, String, Int32) RaiseTrace(IAlert, String, String, String, Int32) Examples This example demonstrates how to call the TryRaise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) method: void Test() { Alert.Instance().TryRaise( AlertType.Debug, new Dictionary{string, object}() { { nameof(message), \"something happened ...\" } } ); } Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the arguments are missing, or NULL."
  },
  "api/CG.Alerts.AlertHandlerBase.html": {
    "href": "api/CG.Alerts.AlertHandlerBase.html",
    "title": "Class AlertHandlerBase",
    "keywords": "Class AlertHandlerBase This class is an abstract implementation of the IAlertHandler interface. Inheritance System.Object AlertHandlerBase DefaultAlertHandler Implements IAlertHandler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public abstract class AlertHandlerBase : IAlertHandler Methods HandleAlert(AlertType, IDictionary<String, Object>, String, String, Int32) This method is called whenever an alert is raised. It routes the alert to the appropriate handler based on the alertType parameter. Declaration public virtual void HandleAlert(AlertType alertType, IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description AlertType alertType The alert type to use for the alert. System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. HandleAudit(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an audit alert is raised. Override the method in a derived class to process the alert. Declaration protected abstract void HandleAudit(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. HandleCritical(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a critical error alert is raised. Override the method in a derived class to process the alert. Declaration protected abstract void HandleCritical(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. HandleDebug(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a debug alert is raised. Override the method in a derived class to process the alert. Declaration protected abstract void HandleDebug(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. HandleError(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an error alert is raised. Override the method in a derived class to process the alert. Declaration protected abstract void HandleError(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. HandleInformation(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an information alert is raised. Override the method in a derived class to process the alert. Declaration protected abstract void HandleInformation(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. HandleTrace(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a trace alert is raised. Override the method in a derived class to process the alert. Declaration protected abstract void HandleTrace(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. HandleWarning(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a warning alert is raised. Override the method in a derived class to process the alert. Declaration protected abstract void HandleWarning(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Implements IAlertHandler"
  },
  "api/CG.Alerts.AlertType.html": {
    "href": "api/CG.Alerts.AlertType.html",
    "title": "Enum AlertType",
    "keywords": "Enum AlertType This enumeration lists the types of alerts that can be raised. Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public enum AlertType Fields Name Description Audit This element represents an audit alert. Critical This element represents a critial error alert. Debug This element represents a debug alert. Error This element represents an error alert. Information This element represents an informational alert. Trace This element represents a trace alert. Warning This element represents a warning alert."
  },
  "api/CG.Alerts.DefaultAlertHandler.html": {
    "href": "api/CG.Alerts.DefaultAlertHandler.html",
    "title": "Class DefaultAlertHandler",
    "keywords": "Class DefaultAlertHandler This class is a default implementation of the IAlertHandler interface. Inheritance System.Object AlertHandlerBase DefaultAlertHandler StandardAlertHandler Implements IAlertHandler Inherited Members AlertHandlerBase.HandleAlert(AlertType, IDictionary<String, Object>, String, String, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public class DefaultAlertHandler : AlertHandlerBase, IAlertHandler Remarks The idea with this class, is to create a set of handlers that don't require external resources to function, but still do something useful. method. Methods HandleAudit(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an audit alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleAudit(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides AlertHandlerBase.HandleAudit(IDictionary<String, Object>, String, String, Int32) HandleCritical(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a critical error alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleCritical(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides AlertHandlerBase.HandleCritical(IDictionary<String, Object>, String, String, Int32) HandleDebug(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a debug alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleDebug(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides AlertHandlerBase.HandleDebug(IDictionary<String, Object>, String, String, Int32) HandleError(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an error alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleError(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides AlertHandlerBase.HandleError(IDictionary<String, Object>, String, String, Int32) HandleInformation(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an information alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleInformation(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides AlertHandlerBase.HandleInformation(IDictionary<String, Object>, String, String, Int32) HandleTrace(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a trace alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleTrace(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides AlertHandlerBase.HandleTrace(IDictionary<String, Object>, String, String, Int32) HandleWarning(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a warning alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleWarning(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides AlertHandlerBase.HandleWarning(IDictionary<String, Object>, String, String, Int32) Implements IAlertHandler"
  },
  "api/CG.Alerts.HostBuilderExtensions.html": {
    "href": "api/CG.Alerts.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions",
    "keywords": "Class HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder type. Inheritance System.Object HostBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public static class HostBuilderExtensions Methods ConfigureApplicationOptions<TOptions>(IHostBuilder) This method attempts to configure the specified application options as a singleton service on the specified service collection. Declaration public static IHostBuilder ConfigureApplicationOptions<TOptions>(this IHostBuilder hostBuilder) where TOptions : ApplicationOptions, new() Parameters Type Name Description Microsoft.Extensions.Hosting.IHostBuilder hostBuilder The host builder to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder The value of the hostBuilder parameter, for chaining calls together. Type Parameters Name Description TOptions The type of associated options. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the required parameters is missing or invalid."
  },
  "api/CG.Alerts.HostExtensions.html": {
    "href": "api/CG.Alerts.HostExtensions.html",
    "title": "Class HostExtensions",
    "keywords": "Class HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. Inheritance System.Object HostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public static class HostExtensions Methods SetStandardAlertHandler(IHost) This method sets a standard handler for alerts processing. Declaration public static IHost SetStandardAlertHandler(this IHost host) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use for the operation. Returns Type Description Microsoft.Extensions.Hosting.IHost Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more of the arguments are missing, or NULL."
  },
  "api/CG.Alerts.html": {
    "href": "api/CG.Alerts.html",
    "title": "Namespace CG.Alerts",
    "keywords": "Namespace CG.Alerts Classes Alert This class represents a singleton implementation of the IAlert interface. AlertExtensions This class contains extension methods related to the IAlert type. AlertHandlerBase This class is an abstract implementation of the IAlertHandler interface. DefaultAlertHandler This class is a default implementation of the IAlertHandler interface. HostBuilderExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHostBuilder type. HostExtensions This class contains extension methods related to the Microsoft.Extensions.Hosting.IHost type. StandardAlertHandler This class is a standard implementation of the IAlertHandler interface. Interfaces IAlert This interface represents an alert for a .NET application. IAlertHandler This interface represents an object that handles alerts. IApplication This interface represents a .NET application. Enums AlertType This enumeration lists the types of alerts that can be raised."
  },
  "api/CG.Alerts.IAlert.html": {
    "href": "api/CG.Alerts.IAlert.html",
    "title": "Interface IAlert",
    "keywords": "Interface IAlert This interface represents an alert for a .NET application. Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public interface IAlert Properties Handler This property contains the default alert handler. Declaration IAlertHandler Handler { get; } Property Value Type Description IAlertHandler Extension Methods AlertExtensions.TryRaise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) AlertExtensions.Raise(IAlert, AlertType, IDictionary<String, Object>, String, String, Int32) AlertExtensions.RaiseInformation(IAlert, String, String, String, Int32) AlertExtensions.RaiseWarning(IAlert, String, String, String, Int32) AlertExtensions.RaiseWarning(IAlert, String, Exception, String, String, Int32) AlertExtensions.RaiseError(IAlert, String, String, String, Int32) AlertExtensions.RaiseError(IAlert, String, Exception, String, String, Int32) AlertExtensions.RaiseCritical(IAlert, String, String, String, Int32) AlertExtensions.RaiseCritical(IAlert, String, Exception, String, String, Int32) AlertExtensions.RaiseAudit(IAlert, String, String, String, Int32) AlertExtensions.RaiseDebug(IAlert, String, String, String, Int32) AlertExtensions.RaiseTrace(IAlert, String, String, String, Int32)"
  },
  "api/CG.Alerts.IAlertHandler.html": {
    "href": "api/CG.Alerts.IAlertHandler.html",
    "title": "Interface IAlertHandler",
    "keywords": "Interface IAlertHandler This interface represents an object that handles alerts. Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public interface IAlertHandler Methods HandleAlert(AlertType, IDictionary<String, Object>, String, String, Int32) This method is called whenever an alert is raised. It routes the alert to the appropriate handler based on the alertType parameter. Declaration void HandleAlert(AlertType alertType, IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description AlertType alertType The alert type to use for the alert. System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler."
  },
  "api/CG.Alerts.IApplication.html": {
    "href": "api/CG.Alerts.IApplication.html",
    "title": "Interface IApplication",
    "keywords": "Interface IApplication This interface represents a .NET application. Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public interface IApplication"
  },
  "api/CG.Alerts.Options.AlertOptions.html": {
    "href": "api/CG.Alerts.Options.AlertOptions.html",
    "title": "Class AlertOptions",
    "keywords": "Class AlertOptions This class represents configuration options for alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase AlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class AlertOptions : OptionsBase, IValidatableObject Properties AuditAlerts This property contains options for audit alert processing. Declaration public AuditAlertOptions AuditAlerts { get; set; } Property Value Type Description AuditAlertOptions CriticalAlerts This property contains options for critical error alert processing. Declaration public CriticalAlertOptions CriticalAlerts { get; set; } Property Value Type Description CriticalAlertOptions DebugAlerts This property contains options for debug alert processing. Declaration public DebugAlertOptions DebugAlerts { get; set; } Property Value Type Description DebugAlertOptions ErrorAlerts This property contains options for error alert processing. Declaration public ErrorAlertOptions ErrorAlerts { get; set; } Property Value Type Description ErrorAlertOptions InformationAlerts This property contains options for information alert processing. Declaration public InformationAlertOptions InformationAlerts { get; set; } Property Value Type Description InformationAlertOptions TraceAlerts This property contains options for trace alert processing. Declaration public TraceAlertOptions TraceAlerts { get; set; } Property Value Type Description TraceAlertOptions WarningAlerts This property contains options for warning alert processing. Declaration public WarningAlertOptions WarningAlerts { get; set; } Property Value Type Description WarningAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.ApplicationOptions.html": {
    "href": "api/CG.Alerts.Options.ApplicationOptions.html",
    "title": "Class ApplicationOptions",
    "keywords": "Class ApplicationOptions This class represents configuration options for an application. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ApplicationOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class ApplicationOptions : OptionsBase, IValidatableObject Properties Alerts This property contains options for alert processing. Declaration public AlertOptions Alerts { get; set; } Property Value Type Description AlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.AuditAlertOptions.html": {
    "href": "api/CG.Alerts.Options.AuditAlertOptions.html",
    "title": "Class AuditAlertOptions",
    "keywords": "Class AuditAlertOptions This class represents configuration options for audit alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase AuditAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class AuditAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.CriticalAlertOptions.html": {
    "href": "api/CG.Alerts.Options.CriticalAlertOptions.html",
    "title": "Class CriticalAlertOptions",
    "keywords": "Class CriticalAlertOptions This class represents configuration options for critical error alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase CriticalAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class CriticalAlertOptions : OptionsBase, IValidatableObject Properties Email This property contains options for critical error emails. Declaration public EmailOptions Email { get; set; } Property Value Type Description CG.Email.Options.EmailOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.DebugAlertOptions.html": {
    "href": "api/CG.Alerts.Options.DebugAlertOptions.html",
    "title": "Class DebugAlertOptions",
    "keywords": "Class DebugAlertOptions This class represents configuration options for debug alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase DebugAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class DebugAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.ErrorAlertOptions.html": {
    "href": "api/CG.Alerts.Options.ErrorAlertOptions.html",
    "title": "Class ErrorAlertOptions",
    "keywords": "Class ErrorAlertOptions This class represents configuration options for error alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ErrorAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class ErrorAlertOptions : OptionsBase, IValidatableObject Properties Email This property contains options for error emails. Declaration public EmailOptions Email { get; set; } Property Value Type Description CG.Email.Options.EmailOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.html": {
    "href": "api/CG.Alerts.Options.html",
    "title": "Namespace CG.Alerts.Options",
    "keywords": "Namespace CG.Alerts.Options Classes AlertOptions This class represents configuration options for alert processing. ApplicationOptions This class represents configuration options for an application. AuditAlertOptions This class represents configuration options for audit alert processing. CriticalAlertOptions This class represents configuration options for critical error alert processing. DebugAlertOptions This class represents configuration options for debug alert processing. ErrorAlertOptions This class represents configuration options for error alert processing. InformationAlertOptions This class represents configuration options for information alert processing. TraceAlertOptions This class represents configuration options for trace alert processing. WarningAlertOptions This class represents configuration options for warning alert processing."
  },
  "api/CG.Alerts.Options.InformationAlertOptions.html": {
    "href": "api/CG.Alerts.Options.InformationAlertOptions.html",
    "title": "Class InformationAlertOptions",
    "keywords": "Class InformationAlertOptions This class represents configuration options for information alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase InformationAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class InformationAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.TraceAlertOptions.html": {
    "href": "api/CG.Alerts.Options.TraceAlertOptions.html",
    "title": "Class TraceAlertOptions",
    "keywords": "Class TraceAlertOptions This class represents configuration options for trace alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase TraceAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class TraceAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.Options.WarningAlertOptions.html": {
    "href": "api/CG.Alerts.Options.WarningAlertOptions.html",
    "title": "Class WarningAlertOptions",
    "keywords": "Class WarningAlertOptions This class represents configuration options for warning alert processing. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase WarningAlertOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts.Options Assembly : CG.Alerts.dll Syntax public class WarningAlertOptions : OptionsBase, IValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Alerts.StandardAlertHandler.html": {
    "href": "api/CG.Alerts.StandardAlertHandler.html",
    "title": "Class StandardAlertHandler",
    "keywords": "Class StandardAlertHandler This class is a standard implementation of the IAlertHandler interface. Inheritance System.Object AlertHandlerBase DefaultAlertHandler StandardAlertHandler Implements IAlertHandler Inherited Members AlertHandlerBase.HandleAlert(AlertType, IDictionary<String, Object>, String, String, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Alerts Assembly : CG.Alerts.dll Syntax public class StandardAlertHandler : DefaultAlertHandler, IAlertHandler Remarks The idea with this class, is to create a set of handlers that are able to use the services of the associated Microsoft.Extensions.Hosting.IHost object to do more useful things when processing alerts. Constructors StandardAlertHandler(IHost) This constructor creates a new instance of the StandardAlertHandler class. Declaration public StandardAlertHandler(IHost host) Parameters Type Name Description Microsoft.Extensions.Hosting.IHost host The host to use with this handler. Properties Host This property contains a reference to the current host. Declaration protected IHost Host { get; set; } Property Value Type Description Microsoft.Extensions.Hosting.IHost Methods HandleAudit(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an audit alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleAudit(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides DefaultAlertHandler.HandleAudit(IDictionary<String, Object>, String, String, Int32) HandleCritical(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a critical error alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleCritical(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides DefaultAlertHandler.HandleCritical(IDictionary<String, Object>, String, String, Int32) HandleDebug(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a debug alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleDebug(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides DefaultAlertHandler.HandleDebug(IDictionary<String, Object>, String, String, Int32) HandleError(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an error alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleError(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides DefaultAlertHandler.HandleError(IDictionary<String, Object>, String, String, Int32) HandleInformation(IDictionary<String, Object>, String, String, Int32) This methid is called whenever an information alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleInformation(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides DefaultAlertHandler.HandleInformation(IDictionary<String, Object>, String, String, Int32) HandleTrace(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a trace alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleTrace(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides DefaultAlertHandler.HandleTrace(IDictionary<String, Object>, String, String, Int32) HandleWarning(IDictionary<String, Object>, String, String, Int32) This methid is called whenever a warning alert is raised. Override the method in a derived class to process the alert. Declaration protected override void HandleWarning(IDictionary<string, object> args, string memberName = null, string sourceFilePath = null, int sourceLineNumber = 0) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Object > args The arguments to use for the alert. System.String memberName Not used. Supplied by the compiler. System.String sourceFilePath Not used. Supplied by the compiler. System.Int32 sourceLineNumber Not used. Supplied by the compiler. Overrides DefaultAlertHandler.HandleWarning(IDictionary<String, Object>, String, String, Int32) Implements IAlertHandler"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Alerts.dll contains alert extensions used by other CodeGator packages."
  }
}